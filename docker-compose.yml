# Vers√£o do Docker Compose
version: '3.8'

# ==============================================================================
# üê≥ ARQUIVO DE CONFIGURA√á√ÉO DOCKER COMPOSE ‚Äì PROJETO ATLAS
#
# Este arquivo define os servi√ßos, redes e volumes para o ambiente de
# desenvolvimento local do Atlas.
#
# Para iniciar todos os servi√ßos:
# $ docker-compose up -d
#
# Para parar todos os servi√ßos:
# $ docker-compose down
# ==============================================================================

services:
  # --- BANCO DE DADOS RELACIONAL E VETORIAL ---
  postgres:
    image: ankane/pgvector:v0.5.1 # Imagem do Postgres com a extens√£o pgvector
    container_name: atlas_postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=atlas_db
      - POSTGRES_USER=atlas_user
      - POSTGRES_PASSWORD=atlas_password
    ports:
      - "5432:5432" # Exp√µe a porta padr√£o do Postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data # Volume para persist√™ncia dos dados
    networks:
      - atlas_net

  # --- BANCO DE DADOS DE GRAFO ---
  neo4j:
    image: neo4j:5.13 # Imagem oficial do Neo4j
    container_name: atlas_neo4j
    restart: unless-stopped
    environment:
      - NEO4J_AUTH=neo4j/atlas_password # Usu√°rio/senha
    ports:
      - "7474:7474" # Interface HTTP
      - "7687:7687" # Porta Bolt para conex√£o de drivers
    volumes:
      - neo4j_data:/data
    networks:
      - atlas_net

  # --- ARMAZENAMENTO DE OBJETOS (FONTES) ---
  minio:
    image: minio/minio:latest
    container_name: atlas_minio
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=minio_admin
      - MINIO_ROOT_PASSWORD=minio_password
    ports:
      - "9000:9000" # Porta da API
      - "9001:9001" # Porta do Console Web
    volumes:
      - minio_data:/data
    networks:
      - atlas_net

  # --- API DE CONSULTA (PLACEHOLDER) ---
  # api:
  #   build:
  #     context: ./api
  #   container_name: atlas_api
  #   restart: unless-stopped
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     - postgres
  #     - neo4j
  #   networks:
  #     - atlas_net

  # --- WORKER DE INGEST√ÉO/ETL (PLACEHOLDER) ---
  # worker:
  #   build:
  #     context: ./worker
  #   container_name: atlas_worker
  #   restart: unless-stopped
  #   depends_on:
  #     - postgres
  #     - neo4j
  #     - minio
  #   networks:
  #     - atlas_net

# --- VOLUMES PARA PERSIST√äNCIA DE DADOS ---
volumes:
  postgres_data:
    driver: local
  neo4j_data:
    driver: local
  minio_data:
    driver: local

# --- REDE PARA COMUNICA√á√ÉO ENTRE SERVI√áOS ---
networks:
  atlas_net:
    driver: bridge
